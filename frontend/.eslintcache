[{"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/index.js":"1","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/App.js":"2","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/reportWebVitals.js":"3","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/Dashboard.js":"4","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/service.js":"5","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCard.js":"6","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/ActorsCard.js":"7","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCastCard.js":"8","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/helpers.js":"9","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/LoginLogout.js":"10"},{"size":1039,"mtime":1612664483787,"results":"11","hashOfConfig":"12"},{"size":591,"mtime":1612395863943,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608797640546,"results":"14","hashOfConfig":"12"},{"size":16100,"mtime":1612665124089,"results":"15","hashOfConfig":"12"},{"size":2325,"mtime":1612664437782,"results":"16","hashOfConfig":"12"},{"size":2353,"mtime":1612398436733,"results":"17","hashOfConfig":"12"},{"size":2470,"mtime":1612241070398,"results":"18","hashOfConfig":"12"},{"size":2217,"mtime":1612401526200,"results":"19","hashOfConfig":"12"},{"size":553,"mtime":1612392436117,"results":"20","hashOfConfig":"12"},{"size":908,"mtime":1612395733613,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"157g4c8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/index.js",[],["49","50"],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/App.js",["51","52","53"],"import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer} from 'react-toastify';\n// Main App Components\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n      <ToastContainer/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/reportWebVitals.js",[],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/Dashboard.js",["54","55"],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/service.js",[],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCard.js",["56","57","58","59","60"],"import React, { useEffect, useState } from 'react';\nimport {ajaxRequest, fetchMovies, MOVIES_API, AUTH_DOMAIN } from '../utils/service';\nimport {useAuth0} from \"@auth0/auth0-react\"\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    loadMovies();\n  }, []);\n\n  useEffect(_=>{\n    loadMovies();\n  }, [props.appToken]);\n\n  useEffect(_=>{\n    if(props.loadMovies){\n      loadMovies();\n    }\n  },[props.loadMovies]);\n\n  const loadMovies = function(){\n      if(props.appToken){\n        fetchMovies((resData)=>{\n          setMovies(resData);\n          props.loadMoviesList(resData);\n        }, props.appToken);\n    }\n  }\n\n  const deleteMovie = function(movie){\n\n    const choice = window.confirm(`Are you sure you want to delete the movie ${movie.title} ?`);\n    if(!choice){\n      return;\n    }\n    ajaxRequest(MOVIES_API+'/'+movie.id, 'DELETE', null, (resData)=>{\n      if(resData.success){\n        // Need to load associations. Hence we need to trigger an update\n        props.isMovieDeleted();\n        loadMovies();\n      }\n    },props.appToken)\n  }\n\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card bg-light mb-3\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {new Date(movie.release_date.replace(\"GMT\", \"\")).toDateString()}</p>\n                  <div className='row'>\n                    <div className='col'>\n                      <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}\n                      data-toggle=\"modal\" data-target=\"#updateMovieModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(movie)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteMovie_'+movie.id} style={{cursor:\"pointer\"}} onClick={_=> deleteMovie(movie)}>Delete</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/ActorsCard.js",["61","62","63"],"import React, { useEffect, useState } from 'react';\nimport {ACTORS_API, fetchActors, ajaxRequest } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        loadActors()\n      }, []);\n    \n      useEffect(_=>{\n        loadActors();\n      }, [props.appToken]);\n\n    useEffect(_=>{\n    if(props.loadActors){\n        loadActors();\n    }\n    },[props.loadActors]);\n\n    const loadActors = function(){\n        if(props.appToken){\n            fetchActors((resData)=>{\n                setActors(resData);\n                props.loadActorsList(resData);\n            }, props.appToken);\n        }\n    }\n\n    const deleteActor = function(actor){\n        const choice = window.confirm(`Are you sure you want to delete the actor ${actor.name} ?`);\n        if(!choice){\n          return;\n        }\n        ajaxRequest(ACTORS_API+'/'+actor.id, 'DELETE', null, (resData)=>{\n          if(resData.success){\n            // Need to load associations. Hence we need to trigger an update\n            props.isActorDeleted();\n            loadActors();\n          }\n        });\n      }\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className='row'>\n                    <div className='col'>\n                        <div className=\"btn-success btn-sm text-center\" id={'actorUpdateBtnContainer'+actor.id}\n                        data-toggle=\"modal\" data-target=\"#updateActorModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(actor)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteActor_'+actor.id} style={{cursor:\"pointer\"}} onClick={_=> deleteActor(actor)}>Delete</div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n      </div>\n    };  \n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCastCard.js",["64","65","66","67","68"],"import React, { useEffect, useState } from 'react';\nimport {MOVIE_CAST_API, ajaxRequest } from '../utils/service';\n\nfunction MoviesCastCard(props) {\n  const [moviesCast, setMoviesCast] = useState([]);\n  const [showCastContent, setCastShowContent] = useState(false);\n  // Fetch available movies\n  useEffect(_=>{\n        fetchMoviesCrew();\n    },[]);\n\n    useEffect(_=>{\n        fetchMoviesCrew();\n    },[props.appToken]);\n  \n  useEffect(_=>{\n    if(props.isUpdated){\n        fetchMoviesCrew();\n    }\n  }, [props.isUpdated]);\n\n  const fetchMoviesCrew = function(){\n    ajaxRequest(MOVIE_CAST_API,'GET', null, (resData)=>{\n        if(resData.success){\n            props.updateShowContent(true);\n            setMoviesCast(resData.data);\n            props.disableIsUpdated();\n        }else{\n            props.updateShowContent(false);\n        }\n    }, props.appToken);\n  }\n\n\n  const deleteCast = function(movie, actor){\n    const choice = window.confirm(`This action will remove ${actor.name} from the movie ${movie.title} ?`);\n    if(!choice){\n      return;\n    }\n    ajaxRequest(MOVIE_CAST_API+`?actor_id=${actor.id}&movie_id=${movie.id}`, 'DELETE', null, (resData)=>{\n      if(resData.success){\n        fetchMoviesCrew();\n      }\n    }, props.appToken);\n  }\n\n  const createMovieCastsCards = function(movieCast){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movieCast.movie.title +\"'s Actors\"}</h5>\n                  <p>Movie Title: {movieCast.movie.title}</p>\n                  <label>Actors:</label>\n                  {movieCast.actors.map((actor)=>{\n                      return <button class=\"btn btn-primary btn-sm\" style={{margin:2}}>\n                      {actor.name} <span class=\"badge badge-light\" onClick={_=>deleteCast(movieCast.movie, actor)}>&times;</span>\n                    </button>\n                  })}\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n        {moviesCast.map(createMovieCastsCards)}\n    </div>\n\n  );\n}\nexport default MoviesCastCard;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/helpers.js",[],["69","70"],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/LoginLogout.js",["71","72"],"import React, { useEffect, useState } from 'react';\nimport {useAuth0} from '@auth0/auth0-react'\n// Main App Components\nfunction LoginLogout(props) {\n    const {\n        isAuthenticated,\n        loginWithRedirect,\n        logout,\n        user\n      } = useAuth0();\n\n  return (\n    <div>\n      {isAuthenticated && <div className='row'>\n        <div className='col'>\n          Hello {user.name}\n        </div>\n        </div>}\n      <div className=\"row\">\n        {!isAuthenticated ?\n        <div className=\"col-2\">\n          <div className=\"btn-success btn-sm\" onClick={() => loginWithRedirect()}>\n            Login\n          </div>\n        </div>:\n        <div className=\"col-2\">\n        <div className=\"btn-danger btn-sm\" onClick={() => {\n          props.resetAppToken();\n          logout()\n          }}>\n          Logout\n        </div>\n      </div>}\n      </div>\n    </div>\n  );\n}\nexport default LoginLogout;\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":2,"column":28,"nodeType":"79","messageId":"80","endLine":2,"endColumn":36},{"ruleId":"77","severity":1,"message":"82","line":18,"column":7,"nodeType":"79","messageId":"80","endLine":18,"endColumn":16},{"ruleId":"77","severity":1,"message":"83","line":5,"column":82,"nodeType":"79","messageId":"80","endLine":5,"endColumn":93},{"ruleId":"84","severity":1,"message":"85","line":39,"column":5,"nodeType":"86","endLine":39,"endColumn":7,"suggestions":"87"},{"ruleId":"77","severity":1,"message":"83","line":2,"column":47,"nodeType":"79","messageId":"80","endLine":2,"endColumn":58},{"ruleId":"77","severity":1,"message":"88","line":3,"column":9,"nodeType":"79","messageId":"80","endLine":3,"endColumn":17},{"ruleId":"84","severity":1,"message":"89","line":10,"column":6,"nodeType":"86","endLine":10,"endColumn":8,"suggestions":"90"},{"ruleId":"84","severity":1,"message":"89","line":14,"column":6,"nodeType":"86","endLine":14,"endColumn":22,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"89","line":20,"column":5,"nodeType":"86","endLine":20,"endColumn":23,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"93","line":9,"column":10,"nodeType":"86","endLine":9,"endColumn":12,"suggestions":"94"},{"ruleId":"84","severity":1,"message":"93","line":13,"column":10,"nodeType":"86","endLine":13,"endColumn":26,"suggestions":"95"},{"ruleId":"84","severity":1,"message":"93","line":19,"column":7,"nodeType":"86","endLine":19,"endColumn":25,"suggestions":"96"},{"ruleId":"77","severity":1,"message":"97","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":25},{"ruleId":"77","severity":1,"message":"98","line":6,"column":27,"nodeType":"79","messageId":"80","endLine":6,"endColumn":45},{"ruleId":"84","severity":1,"message":"99","line":10,"column":7,"nodeType":"86","endLine":10,"endColumn":9,"suggestions":"100"},{"ruleId":"84","severity":1,"message":"99","line":14,"column":7,"nodeType":"86","endLine":14,"endColumn":23,"suggestions":"101"},{"ruleId":"84","severity":1,"message":"99","line":20,"column":6,"nodeType":"86","endLine":20,"endColumn":23,"suggestions":"102"},{"ruleId":"73","replacedBy":"103"},{"ruleId":"75","replacedBy":"104"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'appStyles' is assigned a value but never used.","'AUTH_DOMAIN' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'loginWithRedirect'. Either include them or remove the dependency array.","ArrayExpression",["107"],"'useAuth0' is defined but never used.","React Hook useEffect has a missing dependency: 'loadMovies'. Either include it or remove the dependency array.",["108"],["109"],["110"],"React Hook useEffect has a missing dependency: 'loadActors'. Either include it or remove the dependency array.",["111"],["112"],["113"],"'showCastContent' is assigned a value but never used.","'setCastShowContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMoviesCrew'. Either include it or remove the dependency array.",["114"],["115"],["116"],["105"],["106"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [getAccessTokenSilently, loginWithRedirect]",{"range":"137","text":"138"},"Update the dependencies array to be: [loadMovies]",{"range":"139","text":"140"},"Update the dependencies array to be: [loadMovies, props.appToken]",{"range":"141","text":"142"},"Update the dependencies array to be: [loadMovies, props.loadMovies]",{"range":"143","text":"144"},"Update the dependencies array to be: [loadActors]",{"range":"145","text":"146"},"Update the dependencies array to be: [loadActors, props.appToken]",{"range":"147","text":"148"},"Update the dependencies array to be: [loadActors, props.loadActors]",{"range":"149","text":"150"},"Update the dependencies array to be: [fetchMoviesCrew]",{"range":"151","text":"152"},"Update the dependencies array to be: [fetchMoviesCrew, props.appToken]",{"range":"153","text":"154"},"Update the dependencies array to be: [fetchMoviesCrew, props.isUpdated]",{"range":"155","text":"156"},[1575,1577],"[getAccessTokenSilently, loginWithRedirect]",[323,325],"[loadMovies]",[369,385],"[loadMovies, props.appToken]",[462,480],"[loadMovies, props.loadMovies]",[279,281],"[loadActors]",[341,357],"[loadActors, props.appToken]",[440,458],"[loadActors, props.loadActors]",[344,346],"[fetchMoviesCrew]",[402,418],"[fetchMoviesCrew, props.appToken]",[504,521],"[fetchMoviesCrew, props.isUpdated]"]