[{"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/index.js":"1","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/App.js":"2","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/reportWebVitals.js":"3","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/Dashboard.js":"4","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/service.js":"5","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCard.js":"6","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/ActorsCard.js":"7","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCastCard.js":"8","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/helpers.js":"9"},{"size":622,"mtime":1608951868249,"results":"10","hashOfConfig":"11"},{"size":478,"mtime":1608951583684,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608797640546,"results":"13","hashOfConfig":"11"},{"size":14438,"mtime":1611967815448,"results":"14","hashOfConfig":"11"},{"size":2234,"mtime":1611701628250,"results":"15","hashOfConfig":"11"},{"size":2157,"mtime":1611967305496,"results":"16","hashOfConfig":"11"},{"size":2324,"mtime":1611968414471,"results":"17","hashOfConfig":"11"},{"size":1952,"mtime":1611968787088,"results":"18","hashOfConfig":"11"},{"size":553,"mtime":1611882172270,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"157g4c8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/index.js",[],["42","43"],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/App.js",["44","45","46"],"import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\n\n// Main App Components\nfunction App() {\n  ;\n\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;\n","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/reportWebVitals.js",[],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/Dashboard.js",[],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/service.js",[],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCard.js",["47","48"],"import React, { useEffect, useState } from 'react';\nimport {ajaxRequest, fetchMovies, MOVIES_API } from '../utils/service';\n\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    loadMovies();\n  }, []);\n\n  useEffect(_=>{\n    if(props.loadMovies){\n      loadMovies();\n    }\n  },[props.loadMovies]);\n\n  const loadMovies = function(){\n    fetchMovies((resData)=>{\n      setMovies(resData);\n      props.loadMoviesList(resData);\n    });\n  }\n  const deleteMovie = function(movie){\n\n    const choice = window.confirm(`Are you sure you want to delete the movie ${movie.title} ?`);\n    if(!choice){\n      return;\n    }\n    ajaxRequest(MOVIES_API+'/'+movie.id, 'DELETE', null, (resData)=>{\n      if(resData.success){\n        // Need to load associations. Hence we need to trigger an update\n        props.isMovieDeleted();\n        loadMovies();\n      }\n    })\n  }\n\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card bg-light mb-3\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {new Date(movie.release_date.replace(\"GMT\", \"\")).toDateString()}</p>\n                  <div className='row'>\n                    <div className='col'>\n                      <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}\n                      data-toggle=\"modal\" data-target=\"#updateMovieModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(movie)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteMovie_'+movie.id} style={{cursor:\"pointer\"}} onClick={_=> deleteMovie(movie)}>Delete</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/ActorsCard.js",["49","50"],"import React, { useEffect, useState } from 'react';\nimport {ACTORS_API, fetchActors, ajaxRequest } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        loadActors()\n      }, []);\n\n    useEffect(_=>{\n    if(props.loadActors){\n        loadActors();\n    }\n    },[props.loadActors]);\n\n    const loadActors = function(){\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n    }\n\n    const deleteActor = function(actor){\n        const choice = window.confirm(`Are you sure you want to delete the actor ${actor.name} ?`);\n        if(!choice){\n          return;\n        }\n        ajaxRequest(ACTORS_API+'/'+actor.id, 'DELETE', null, (resData)=>{\n          if(resData.success){\n            // Need to load associations. Hence we need to trigger an update\n            props.isActorDeleted();\n            loadActors();\n          }\n        });\n      }\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className='row'>\n                    <div className='col'>\n                        <div className=\"btn-success btn-sm text-center\" id={'actorUpdateBtnContainer'+actor.id}\n                        data-toggle=\"modal\" data-target=\"#updateActorModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(actor)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteActor_'+actor.id} style={{cursor:\"pointer\"}} onClick={_=> deleteActor(actor)}>Delete</div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n      </div>\n    };  \n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCastCard.js",["51","52"],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/helpers.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":17,"nodeType":"59","messageId":"60","endLine":2,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":2,"column":28,"nodeType":"59","messageId":"60","endLine":2,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":18,"column":7,"nodeType":"59","messageId":"60","endLine":18,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":10,"column":6,"nodeType":"65","endLine":10,"endColumn":8,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"64","line":16,"column":5,"nodeType":"65","endLine":16,"endColumn":23,"suggestions":"67"},{"ruleId":"63","severity":1,"message":"68","line":9,"column":10,"nodeType":"65","endLine":9,"endColumn":12,"suggestions":"69"},{"ruleId":"63","severity":1,"message":"68","line":15,"column":7,"nodeType":"65","endLine":15,"endColumn":25,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":9,"column":7,"nodeType":"65","endLine":9,"endColumn":9,"suggestions":"72"},{"ruleId":"63","severity":1,"message":"71","line":15,"column":6,"nodeType":"65","endLine":15,"endColumn":23,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'appStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadMovies'. Either include it or remove the dependency array.","ArrayExpression",["76"],["77"],"React Hook useEffect has a missing dependency: 'loadActors'. Either include it or remove the dependency array.",["78"],["79"],"React Hook useEffect has a missing dependency: 'fetchMoviesCrew'. Either include it or remove the dependency array.",["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [loadMovies]",{"range":"94","text":"95"},"Update the dependencies array to be: [loadMovies, props.loadMovies]",{"range":"96","text":"97"},"Update the dependencies array to be: [loadActors]",{"range":"98","text":"99"},"Update the dependencies array to be: [loadActors, props.loadActors]",{"range":"100","text":"101"},"Update the dependencies array to be: [fetchMoviesCrew]",{"range":"102","text":"103"},"Update the dependencies array to be: [fetchMoviesCrew, props.isUpdated]",{"range":"104","text":"105"},[267,269],"[loadMovies]",[346,364],"[loadMovies, props.loadMovies]",[279,281],"[loadActors]",[364,382],"[loadActors, props.loadActors]",[295,297],"[fetchMoviesCrew]",[383,400],"[fetchMoviesCrew, props.isUpdated]"]