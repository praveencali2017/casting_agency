[{"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/index.js":"1","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/App.js":"2","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/reportWebVitals.js":"3","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/Dashboard.js":"4","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/service.js":"5","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCard.js":"6","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/ActorsCard.js":"7","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCastCard.js":"8"},{"size":622,"mtime":1608951868249,"results":"9","hashOfConfig":"10"},{"size":478,"mtime":1608951583684,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608797640546,"results":"12","hashOfConfig":"10"},{"size":8838,"mtime":1609033194991,"results":"13","hashOfConfig":"10"},{"size":1890,"mtime":1609030692145,"results":"14","hashOfConfig":"10"},{"size":1170,"mtime":1609024118478,"results":"15","hashOfConfig":"10"},{"size":1314,"mtime":1609024202260,"results":"16","hashOfConfig":"10"},{"size":1486,"mtime":1609032724909,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"157g4c8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/index.js",[],["40","41"],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/App.js",["42","43","44"],"import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\n\n// Main App Components\nfunction App() {\n  ;\n\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;\n","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/reportWebVitals.js",[],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/Dashboard.js",[],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/utils/service.js",[],["45","46"],"/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCard.js",["47","48"],"import React, { useEffect, useState } from 'react';\nimport {fetchMovies } from '../utils/service';\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    fetchMovies((resData)=>{\n      setMovies(resData);\n      props.loadMoviesList(resData);\n    });\n  }, []);\n\n  useEffect(_=>{\n    if(props.loadMovies){\n      fetchMovies((resData)=>{\n        setMovies(resData);\n        props.loadMoviesList(resData);\n      });\n    }\n  },[props.loadMovies]);\n\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {movie.release_date}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}>Update</div>\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/ActorsCard.js",["49","50"],"import React, { useEffect, useState } from 'react';\nimport {fetchActors } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n      }, []);\n\n    useEffect(_=>{\n    if(props.loadActors){\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n    }\n    },[props.loadActors]);\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'actor-id-btn-'+actor.id}>Update</div>\n                </div>\n              </div>\n      </div>\n    };\n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","/Users/praveen/PycharmProjects/udacity_web/capstone_proj/casting_agency/frontend/src/components/MoviesCastCard.js",["51","52"],"import React, { useEffect, useState } from 'react';\nimport {MOVIE_CAST_API, ajaxRequestGet } from '../utils/service';\n\nfunction MoviesCastCard(props) {\n  const [moviesCast, setMoviesCast] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n        fetchMoviesCrew();\n    },[]);\n  \n  useEffect(_=>{\n    console.log(\"Updated!!!!\");\n    console.log(props.isUpdated);\n    if(props.isUpdated){\n        fetchMoviesCrew();\n    }\n  }, [props.isUpdated]);\n\n  const fetchMoviesCrew = function(){\n    ajaxRequestGet(MOVIE_CAST_API, (resData)=>{\n        if(resData.success){\n            setMoviesCast(resData.data);\n            props.disableIsUpdated();\n        }\n    });\n  }\n\n  const createMovieCastsCards = function(movieCast){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movieCast.movie.title +\"'s Actors\"}</h5>\n                  <p>Movie Title: {movieCast.movie.title}</p>\n                  <label for=\"\">Actors:</label>\n                  {movieCast.actors.map((actor)=>{\n                      return <span class=\"badge badge-pill badge-primary\">{actor.name}</span>\n                  })}\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {moviesCast.map(createMovieCastsCards)}\n    </div>\n\n  );\n}\nexport default MoviesCastCard;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":17,"nodeType":"59","messageId":"60","endLine":2,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":2,"column":28,"nodeType":"59","messageId":"60","endLine":2,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":18,"column":7,"nodeType":"59","messageId":"60","endLine":18,"endColumn":16},{"ruleId":"53","replacedBy":"63"},{"ruleId":"55","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":12,"column":6,"nodeType":"67","endLine":12,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"66","line":21,"column":5,"nodeType":"67","endLine":21,"endColumn":23,"suggestions":"69"},{"ruleId":"65","severity":1,"message":"66","line":12,"column":10,"nodeType":"67","endLine":12,"endColumn":12,"suggestions":"70"},{"ruleId":"65","severity":1,"message":"66","line":21,"column":7,"nodeType":"67","endLine":21,"endColumn":25,"suggestions":"71"},{"ruleId":"65","severity":1,"message":"72","line":9,"column":7,"nodeType":"67","endLine":9,"endColumn":9,"suggestions":"73"},{"ruleId":"65","severity":1,"message":"72","line":17,"column":6,"nodeType":"67","endLine":17,"endColumn":23,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'appStyles' is assigned a value but never used.",["75"],["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["77"],["78"],["79"],["80"],"React Hook useEffect has a missing dependency: 'fetchMoviesCrew'. Either include it or remove the dependency array.",["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"83","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [props]",{"range":"94","text":"95"},"Update the dependencies array to be: [props, props.loadMovies]",{"range":"96","text":"97"},{"range":"98","text":"95"},"Update the dependencies array to be: [props, props.loadActors]",{"range":"99","text":"100"},"Update the dependencies array to be: [fetchMoviesCrew]",{"range":"101","text":"102"},"Update the dependencies array to be: [fetchMoviesCrew, props.isUpdated]",{"range":"103","text":"104"},[323,325],"[props]",[490,508],"[props, props.loadMovies]",[353,355],[536,554],"[props, props.loadActors]",[282,284],"[fetchMoviesCrew]",[436,453],"[fetchMoviesCrew, props.isUpdated]"]