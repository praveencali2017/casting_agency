{"version":3,"sources":["utils/service.js","components/ActorsCard.js","components/MoviesCard.js","components/MoviesCastCard.js","components/Dashboard.js","utils/helpers.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_URL","window","location","origin","MOVIES_API","ACTORS_API","MOVIE_CAST_API","fetchMovies","callback","fetch","then","response","json","resData","success","data","fetchActors","ajaxRequest","url","method","reqData","body","JSON","stringify","headers","Headers","ActorsCard","props","useState","actors","setActors","useEffect","_","loadActorsList","loadActors","className","map","actor","style","padding","marginLeft","width","color","name","age","gender","id","data-toggle","data-target","cursor","onClick","chooseUpdate","MoviesCard","movies","setMovies","loadMoviesList","loadMovies","movie","title","Date","release_date","replace","toDateString","MoviesCastCard","moviesCast","setMoviesCast","fetchMoviesCrew","isUpdated","disableIsUpdated","movieCast","for","class","Dashboard","isMovieUpdated","setIsMovieUpdated","isActorUpdated","setIsActorUpdated","isMovieActorUpdated","setMovieActorUpdated","moviesList","setMoviesList","actorsList","setActorsList","selectedActorUpdate","setSelectedActorUpdate","selectedMovieUpdate","setSelectedMovieUpdate","addNewMovie","addMovie","document","getElementById","value","click","addNewActor","addActor","querySelector","updateActorInput","updateMovieInput","updateActor","actorId","updateMovie","movieId","role","href","type","data-dismiss","marginTop","releaseDate","dateString","sep","date","monthFormat","getMonth","getFullYear","getDate","dateFormatter","onChange","marginRight","createMovieUpdateModal","checked","disabled","selected","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"js/main.a6af0de1.chunk.js","sourcesContent":["const SERVER_URL = `${window.location.origin}/`;\nconst MOVIES_API = SERVER_URL+'v1/movies';\nconst ACTORS_API = SERVER_URL+'v1/actors';\nconst MOVIE_CAST_API = SERVER_URL+'v1/movies_cast';\n\nconst fetchMovies = function(callback){\n    fetch(MOVIES_API)\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    }); \n  };\nconst fetchActors = function(callback){\n    fetch(ACTORS_API)\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    });\n};\nconst addMovie = function(reqData, callback){\n    fetch(MOVIES_API, {\n      method:'POST',\n      body: JSON.stringify(reqData),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }) \n  };\n\nconst addActor = function(reqData, callback){\n    fetch(ACTORS_API, {\n        method:'POST',\n        body: JSON.stringify(reqData),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }) \n  };\n\nconst ajaxRequestPost = function(url, reqData, callback){\n    fetch(url, {\n        method:'POST',\n        body: JSON.stringify(reqData),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }); \n  };\n\nconst ajaxRequest = function(url, method, reqData, callback){\nfetch(url, {\n    method: method,\n    body: reqData?JSON.stringify(reqData): null,\n    headers: new Headers({\n    'Content-Type': 'application/json'\n    })})\n.then(response => response.json())\n.then(resData=>{\n    if(callback){\n        callback(resData);\n    }\n}); \n};\n\nconst ajaxRequestGet = function(url, callback){\n    fetch(url)\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    });\n  };\n\nexport {SERVER_URL, MOVIES_API, ACTORS_API, MOVIE_CAST_API, fetchMovies, fetchActors, addMovie, addActor, ajaxRequestGet, ajaxRequestPost, ajaxRequest};","import React, { useEffect, useState } from 'react';\nimport {fetchActors } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n      }, []);\n\n    useEffect(_=>{\n    if(props.loadActors){\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n    }\n    },[props.loadActors]);\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'actorUpdateBtnContainer'+actor.id}\n                    data-toggle=\"modal\" data-target=\"#updateActorModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(actor)}>Update</div>\n                </div>\n              </div>\n      </div>\n    };  \n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","import React, { useEffect, useState } from 'react';\nimport {fetchMovies } from '../utils/service';\n\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    fetchMovies((resData)=>{\n      setMovies(resData);\n      props.loadMoviesList(resData);\n    });\n  }, []);\n\n  useEffect(_=>{\n    if(props.loadMovies){\n      fetchMovies((resData)=>{\n        setMovies(resData);\n        props.loadMoviesList(resData);\n      });\n    }\n  },[props.loadMovies]);\n\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {new Date(movie.release_date.replace(\"GMT\", \"\")).toDateString()}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}\n                  data-toggle=\"modal\" data-target=\"#updateMovieModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(movie)}>Update</div>\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","import React, { useEffect, useState } from 'react';\nimport {MOVIE_CAST_API, ajaxRequestGet } from '../utils/service';\n\nfunction MoviesCastCard(props) {\n  const [moviesCast, setMoviesCast] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n        fetchMoviesCrew();\n    },[]);\n  \n  useEffect(_=>{\n    if(props.isUpdated){\n        fetchMoviesCrew();\n    }\n  }, [props.isUpdated]);\n\n  const fetchMoviesCrew = function(){\n    ajaxRequestGet(MOVIE_CAST_API, (resData)=>{\n        if(resData.success){\n            setMoviesCast(resData.data);\n            props.disableIsUpdated();\n        }\n    });\n  }\n\n  const createMovieCastsCards = function(movieCast){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movieCast.movie.title +\"'s Actors\"}</h5>\n                  <p>Movie Title: {movieCast.movie.title}</p>\n                  <label for=\"\">Actors:</label>\n                  {movieCast.actors.map((actor)=>{\n                      return <span class=\"badge badge-pill badge-primary\">{actor.name}</span>\n                  })}\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {moviesCast.map(createMovieCastsCards)}\n    </div>\n\n  );\n}\nexport default MoviesCastCard;","import React, { useState } from 'react';\nimport ActorsCard from './ActorsCard';\nimport MoviesCard from './MoviesCard';\nimport { dateFormatter } from '../utils/helpers';\nimport {addActor, addMovie, ajaxRequestPost, MOVIE_CAST_API, ACTORS_API, ajaxRequest, MOVIES_API} from '../utils/service';\nimport MoviesCastCard from './MoviesCastCard';\nfunction Dashboard(props) {\n  const [isMovieUpdated, setIsMovieUpdated] = useState(false);\n  const [isActorUpdated, setIsActorUpdated] = useState(false);\n  const [isMovieActorUpdated, setMovieActorUpdated] = useState(false);\n  const [moviesList, setMoviesList] = useState([]);\n  const [actorsList, setActorsList] = useState([]);\n  const [selectedActorUpdate, setSelectedActorUpdate] = useState({});\n  const [selectedMovieUpdate, setSelectedMovieUpdate] = useState({});\n  \n  const addNewMovie = function(){\n    let reqData = {\n      'title': document.getElementById('movieTitleTxt').value,\n      'release_date': document.getElementById('movieReleaseDateVal').value\n    };\n    addMovie(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsMovieUpdated(true);\n      }\n      document.getElementById(\"dismissMovieModalBtn\").click();\n    });\n  };\n\n  const addNewActor = function(){\n    let reqData = {\n      'name': document.getElementById('actorNameTxt').value,\n      'age': document.getElementById('actorAgeTxt').value,\n      'gender': document.querySelector('input[name = gender]:checked').value\n    };\n    addActor(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsActorUpdated(true);\n      }\n      document.getElementById(\"dismissActorModalBtn\").click();\n    });\n  };\n\n  const addActorToMovie = function(){\n    ajaxRequestPost(MOVIE_CAST_API, {\n      'movie_id': document.getElementById('selectedMovie').value,\n      'actor_id': document.getElementById('selectedActor').value\n    }, (resData)=>{\n      if(resData.success){\n        setMovieActorUpdated(true);\n      }\n    });\n  }\n\n\n  const createMovieModal = function(){\n    return <div className=\"modal fade\" id=\"addMovieModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addMovieModalTitle\">Add New Movie</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieTitleTxt\">Title:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"movieTitleTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieReleaseDateVal\">Release Date:</label>\n                    <input type=\"date\" className=\"form-control\" id=\"movieReleaseDateVal\"/>                      \n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewMovie();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissMovieModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const createActorModal = function(){\n    return <div className=\"modal fade\" id=\"addActorModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addActorModalTitle\">Add Actor</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorNameTxt\">Name:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorNameTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorAgeTxt\">Age:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorAgeTxt\"/>  \n                  </div>\n                  <div className=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"male\"/>Male\n                    </label>\n                  </div>\n                  <div class=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"female\"/>Female\n                    </label>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewActor();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissActorModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const updateActorInput = function(){\n    const id = selectedActorUpdate.id;\n    const gender = document.querySelector(\"input[name='updateActorGender']:checked\").value;\n    const name = document.getElementById(\"updateActorTitleText\").value;\n    const age = document.getElementById(\"updateActorAgeVal\").value;\n    setSelectedActorUpdate({id, gender, name, age});\n\n  }\n  const updateMovieInput = function(){\n    const id = selectedMovieUpdate.id;\n    const title = document.getElementById(\"updateMovieTitleText\").value;\n    const release_date = document.getElementById(\"updateMovieReleaseDateVal\").value;\n    setSelectedMovieUpdate({id, title, release_date});\n\n  }\n\n  const createActorUpdateModal = function(){\n    return <div className=\"modal fade\" id=\"updateActorModal\" role=\"dialog\">\n    <div className=\"modal-dialog modal-dialog-centered\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"updateActorModalTitle\">Update Actor</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" id=\"updateActorModalDismiss\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"input-group\">\n            <label className=\"input-group\" for=\"updateActorTitleText\">Name:</label>\n            <input type=\"text\" className=\"form-control\" id=\"updateActorTitleText\" value={selectedActorUpdate.name} onChange={updateActorInput}/>  \n          </div>\n          <div className=\"input-group\">\n            <label className=\"input-group\" for=\"updateActorAgeVal\">Age:</label>\n            <input type=\"text\" className=\"form-control\" id=\"updateActorAgeVal\" value={selectedActorUpdate.age} onChange={updateActorInput}/>                      \n          </div>\n          <div className=\"input-group\">\n            <div className=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"updateActorGender\" value=\"male\" checked={selectedActorUpdate.gender==='male' && 'checked'} onChange={updateActorInput}/>Male\n                </label>\n              </div>\n              <div class=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"updateActorGender\" value=\"female\" checked={selectedActorUpdate.gender==='female' && 'checked'} onChange={updateActorInput}/>Female\n                </label>\n              </div>                   \n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"button\" style={{marginLeft:\"auto\", marginRight:\"auto\"}} className=\"btn btn-primary\" onClick={_=>{updateActor(selectedActorUpdate.id)}}>Update</button>\n        </div>\n      </div>   \n</div>\n</div>\n  }\n\n  const updateActor = function(actorId){\n        document.getElementById(\"updateActorModalDismiss\").click();\n        const reqData = selectedActorUpdate;\n        ajaxRequest(ACTORS_API+'/'+actorId, 'PATCH', reqData, (resData)=>{\n            if(resData.success){\n                setIsActorUpdated(true);\n            }\n        });\n    }\n\n    const createMovieUpdateModal = function(){\n      let releaseDate = selectedMovieUpdate.release_date ? dateFormatter(selectedMovieUpdate.release_date): \"\";\n      return <div className=\"modal fade\" id=\"updateMovieModal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Update Movie</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" id=\"updateMovieModalDismiss\">\n              <span>&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"input-group\">\n              <label className=\"input-group\" for=\"updateMovieTitleText\">Title:</label>\n              <input type=\"text\" className=\"form-control\" id=\"updateMovieTitleText\" value={selectedMovieUpdate.title} onChange={updateMovieInput}/>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"input-group\" for=\"updateMovieReleaseDateVal\">Release Date:</label>\n              <input type=\"date\" className=\"form-control\" id=\"updateMovieReleaseDateVal\" value={releaseDate} onChange={updateMovieInput}/>                      \n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" style={{marginLeft:\"auto\", marginRight:\"auto\"}} className=\"btn btn-primary\" onClick={_=>{updateMovie(selectedMovieUpdate.id)}}>Update</button>\n          </div>\n        </div>   \n  </div>\n  </div>\n    }\n\n    const updateMovie = function(movieId){\n      // Let's close the modal while updating values\n      document.getElementById(\"updateMovieModalDismiss\").click();\n      ajaxRequest(MOVIES_API+'/'+movieId, 'PATCH', selectedMovieUpdate, (resData)=>{\n        if(resData.success){\n          setIsMovieUpdated(true);\n        }\n      });\n    }\n\n  return (\n    <div className='row'>\n      <div className='col'>\n          <div className=\"nav nav-tabs\" id=\"dashboardTab\" role=\"tablist\">\n              <a className=\"nav-item nav-link active\" data-toggle=\"tab\" href=\"#viewContent\" role=\"tab\">View/Edit</a>\n              <a className=\"nav-item nav-link\" data-toggle=\"tab\" href=\"#manageCastContent\" role=\"tab\">Manage Cast</a>\n          </div>\n          <div className=\"tab-content\" id=\"tabDashboardContent\">\n            <div className=\"tab-pane fade show active\" id=\"viewContent\" role=\"tabpanel\" >\n              <div className=\"row\">\n                <div className='col'>\n                  <h3>Movies</h3>\n                  <div className='btn-primary btn-lg' id='createMovieBtn' data-toggle=\"modal\" data-target=\"#addMovieModal\">Create Movie</div>\n                    {createMovieModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <MoviesCard loadMovies={isMovieUpdated} loadMoviesList={(resData)=>{\n                      setMoviesList(resData);\n                      setIsMovieUpdated(false);\n                      }} chooseUpdate={setSelectedMovieUpdate}/>\n                  </div>\n                  {createMovieUpdateModal()}\n                </div>\n                <div className='col'>\n                  <h3>Actors</h3>\n                  <div className='btn-primary btn-lg' id='createActorBtn' data-toggle=\"modal\" data-target=\"#addActorModal\">Create Actor</div>\n                    {createActorModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <ActorsCard loadActors={isActorUpdated} loadActorsList={(resData)=>{\n                      setActorsList(resData);\n                      setIsActorUpdated(false);\n                      }} chooseUpdate={setSelectedActorUpdate} />\n                  </div>\n                  {createActorUpdateModal()}\n                </div>\n              </div>\n            </div>\n            <div className=\"tab-pane fade\" id=\"manageCastContent\" role=\"tabpanel\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"row\" style={{marginTop:20}}>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedMovie\">\n                        <option disabled selected>Select Movie</option>\n                        {moviesList.map((movie)=>{\n                          return <option value={movie.id}>{movie.title}</option>\n                        })}\n                      </select>\n                    </div>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedActor\">\n                        <option disabled selected>Select Actor</option>\n                        {actorsList.map((actor)=>{\n                          return <option value={actor.id}>{actor.name}</option>\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"row\" style={{marginTop:10}}>\n                    <div className=\"col\">\n                      <div className=\"btn btn-success btn-lg btn-block\" onClick={addActorToMovie}>\n                        Cast to the movie\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <MoviesCastCard isUpdated={isMovieActorUpdated} disableIsUpdated={()=> setMovieActorUpdated(false)}/>\n                    </div>\n                    \n                  </div>    \n                </div>\n                \n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n\n  );\n}\nexport default Dashboard;","/**\n * Convert standard date string to YYYY-MM-dd or YYYY/MM/dd \n * @param {date string} dateString \n */\nconst dateFormatter = function(dateString, sep='-'){\n    // Let's remove the timezone concept since we don't require timezone in this particular requirement\n    dateString = dateString.replace(\"GMT\", \"\");\n    let date = new Date(dateString+ \" \");\n    const monthFormat = (date.getMonth()+1)<10 ? '0'+(date.getMonth()+1) : (date.getMonth()+1); \n    return `${date.getFullYear()}${sep}${monthFormat}${sep}${date.getDate()}`;\n}\nexport {dateFormatter};","import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\n\n// Main App Components\nfunction App() {\n  ;\n\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}