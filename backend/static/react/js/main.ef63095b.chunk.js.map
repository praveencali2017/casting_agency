{"version":3,"sources":["utils/service.js","components/ActorsCard.js","components/MoviesCard.js","components/MoviesCastCard.js","components/LoginLogout.js","components/Dashboard.js","utils/helpers.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_URL","window","location","origin","MOVIES_API","ACTORS_API","MOVIE_CAST_API","ajaxRequest","url","method","reqData","callback","token","fetch","body","JSON","stringify","headers","Headers","then","response","json","resData","success","auth_error","toast","error","description","position","catch","exc","console","log","ActorsCard","props","useState","actors","setActors","useEffect","_","loadActors","appToken","loadActorsList","data","className","map","actor","style","padding","marginLeft","width","color","name","age","gender","id","data-toggle","data-target","cursor","onClick","chooseUpdate","confirm","isActorDeleted","deleteActor","MoviesCard","movies","setMovies","loadMovies","loadMoviesList","movie","title","Date","release_date","replace","toDateString","isMovieDeleted","deleteMovie","MoviesCastCard","moviesCast","setMoviesCast","fetchMoviesCrew","isUpdated","updateShowContent","disableIsUpdated","movieCast","class","margin","deleteCast","LoginLogout","useAuth0","isAuthenticated","loginWithRedirect","logout","user","resetAppToken","Dashboard","isMovieUpdated","setIsMovieUpdated","isActorUpdated","setIsActorUpdated","isMovieActorUpdated","setMovieActorUpdated","moviesList","setMoviesList","actorsList","setActorsList","selectedActorUpdate","setSelectedActorUpdate","selectedMovieUpdate","setSelectedMovieUpdate","setAppToken","showCastContent","setCastShowContent","getAccessTokenSilently","a","audience","scope","addNewMovie","addMovie","document","getElementById","value","click","addNewActor","addActor","querySelector","updateActorInput","updateMovieInput","updateActor","actorId","updateMovie","movieId","role","href","type","data-dismiss","for","marginTop","releaseDate","dateString","sep","date","monthFormat","getMonth","getFullYear","getDate","dateFormatter","onChange","marginRight","createMovieUpdateModal","checked","disabled","selected","alert","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri"],"mappings":"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","file":"js/main.ef63095b.chunk.js","sourcesContent":["import { toast } from \"react-toastify\";\n\nconst SERVER_URL = `${window.location.origin}/`;\nconst MOVIES_API = SERVER_URL+'v1/movies';\nconst ACTORS_API = SERVER_URL+'v1/actors';\nconst MOVIE_CAST_API = SERVER_URL+'v1/movies_cast';\nconst AUTH_DOMAIN = \"dev-prav-auth.us.auth0.com\";\n\nconst fetchMovies = function(callback, token){\n    ajaxRequest(MOVIES_API, 'GET', null, (resData)=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    }, token);\n  };\nconst fetchActors = function(callback, token){\n    ajaxRequest(ACTORS_API, 'GET', null, (resData)=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    }, token);\n};\nconst addMovie = function(reqData, callback, token){\n    ajaxRequest(MOVIES_API, 'POST', reqData, callback, token);\n  };\n\nconst addActor = function(reqData, callback, token){\n    ajaxRequest(ACTORS_API, 'POST', reqData, callback, token);\n  };\n\nconst ajaxRequestPost = function(url, reqData, callback){\n    fetch(url, {\n        method:'POST',\n        body: JSON.stringify(reqData),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    })\n    .catch(exc=>{\n        alert(exc);\n    })\n  };\n\nconst ajaxRequest = function(url, method, reqData, callback, token){\n    if(token != null){\n    fetch(url, {\n        method: method,\n        body: reqData?JSON.stringify(reqData): null,\n        headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n        })})\n    .then(response =>response.json())\n    .then(resData=>{\n        if(!resData.success && resData.auth_error){\n            toast.error(resData.description, {position:'bottom-center'});\n        }\n        if(callback){\n            callback(resData);\n        }\n    })\n    .catch(exc=>{\n        console.log(exc);\n    }); \n}\nelse{\n    console.log(\"No Authorized token is set!!!!\");\n}\n};\n\nconst ajaxRequestGet = function(url, callback){\n    fetch(url)\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    });\n  };\n\nexport {SERVER_URL, MOVIES_API, ACTORS_API, MOVIE_CAST_API, fetchMovies, fetchActors, addMovie, addActor, ajaxRequestGet, ajaxRequestPost, ajaxRequest, AUTH_DOMAIN};","import React, { useEffect, useState } from 'react';\nimport {ACTORS_API, fetchActors, ajaxRequest } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        loadActors()\n      }, []);\n    \n      useEffect(_=>{\n        loadActors();\n      }, [props.appToken]);\n\n    useEffect(_=>{\n    if(props.loadActors){\n        loadActors();\n    }\n    },[props.loadActors]);\n\n    const loadActors = function(){\n        if(props.appToken){\n            fetchActors((resData)=>{\n                setActors(resData);\n                props.loadActorsList(resData);\n            }, props.appToken);\n        }\n    }\n\n    const deleteActor = function(actor){\n        const choice = window.confirm(`Are you sure you want to delete the actor ${actor.name} ?`);\n        if(!choice){\n          return;\n        }\n        ajaxRequest(ACTORS_API+'/'+actor.id, 'DELETE', null, (resData)=>{\n          if(resData.success){\n            // Need to load associations. Hence we need to trigger an update\n            props.isActorDeleted();\n            loadActors();\n          }\n        });\n      }\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className='row'>\n                    <div className='col'>\n                        <div className=\"btn-success btn-sm text-center\" id={'actorUpdateBtnContainer'+actor.id}\n                        data-toggle=\"modal\" data-target=\"#updateActorModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(actor)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteActor_'+actor.id} style={{cursor:\"pointer\"}} onClick={_=> deleteActor(actor)}>Delete</div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n      </div>\n    };  \n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","import React, { useEffect, useState } from 'react';\nimport {ajaxRequest, fetchMovies, MOVIES_API, AUTH_DOMAIN } from '../utils/service';\nimport {useAuth0} from \"@auth0/auth0-react\"\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    loadMovies();\n  }, []);\n\n  useEffect(_=>{\n    loadMovies();\n  }, [props.appToken]);\n\n  useEffect(_=>{\n    if(props.loadMovies){\n      loadMovies();\n    }\n  },[props.loadMovies]);\n\n  const loadMovies = function(){\n      if(props.appToken){\n        fetchMovies((resData)=>{\n          setMovies(resData);\n          props.loadMoviesList(resData);\n        }, props.appToken);\n    }\n  }\n\n  const deleteMovie = function(movie){\n\n    const choice = window.confirm(`Are you sure you want to delete the movie ${movie.title} ?`);\n    if(!choice){\n      return;\n    }\n    ajaxRequest(MOVIES_API+'/'+movie.id, 'DELETE', null, (resData)=>{\n      if(resData.success){\n        // Need to load associations. Hence we need to trigger an update\n        props.isMovieDeleted();\n        loadMovies();\n      }\n    },props.appToken)\n  }\n\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card bg-light mb-3\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {new Date(movie.release_date.replace(\"GMT\", \"\")).toDateString()}</p>\n                  <div className='row'>\n                    <div className='col'>\n                      <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}\n                      data-toggle=\"modal\" data-target=\"#updateMovieModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(movie)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteMovie_'+movie.id} style={{cursor:\"pointer\"}} onClick={_=> deleteMovie(movie)}>Delete</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {MOVIE_CAST_API, ajaxRequestGet, ajaxRequest } from '../utils/service';\n\nfunction MoviesCastCard(props) {\n  const [moviesCast, setMoviesCast] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n        fetchMoviesCrew();\n    },[]);\n    useEffect(_=>{\n        fetchMoviesCrew();\n    },[props.appToken]);\n  \n  useEffect(_=>{\n    if(props.isUpdated){\n        fetchMoviesCrew();\n    }\n  }, [props.isUpdated]);\n\n  const fetchMoviesCrew = function(){\n    console.log(\"Fetching crew!!!!\");\n    ajaxRequest(MOVIE_CAST_API,'GET', null, (resData)=>{\n        if(resData.success){\n            props.updateShowContent(true);\n            setMoviesCast(resData.data);\n            props.disableIsUpdated();\n        }\n    }, props.appToken);\n  }\n\n\n  const deleteCast = function(movie, actor){\n    const choice = window.confirm(`This action will remove ${actor.name} from the movie ${movie.title} ?`);\n    if(!choice){\n      return;\n    }\n    ajaxRequest(MOVIE_CAST_API+`?actor_id=${actor.id}&movie_id=${movie.id}`, 'DELETE', null, (resData)=>{\n      if(resData.success){\n        fetchMoviesCrew();\n      }\n    }, props.appToken);\n  }\n\n  const createMovieCastsCards = function(movieCast){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movieCast.movie.title +\"'s Actors\"}</h5>\n                  <p>Movie Title: {movieCast.movie.title}</p>\n                  <label>Actors:</label>\n                  {movieCast.actors.map((actor)=>{\n                      return <button class=\"btn btn-primary btn-sm\" style={{margin:2}}>\n                      {actor.name} <span class=\"badge badge-light\" onClick={_=>deleteCast(movieCast.movie, actor)}>&times;</span>\n                    </button>\n                  })}\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n        {moviesCast.map(createMovieCastsCards)}\n    </div>\n\n  );\n}\nexport default MoviesCastCard;","import React, { useEffect, useState } from 'react';\nimport {useAuth0} from '@auth0/auth0-react'\n// Main App Components\nfunction LoginLogout(props) {\n    const {\n        isAuthenticated,\n        loginWithRedirect,\n        logout,\n        user\n      } = useAuth0();\n\n  return (\n    <div>\n      {isAuthenticated && <div className='row'>\n        <div className='col'>\n          Hello {user.name}\n        </div>\n        </div>}\n      <div className=\"row\">\n        {!isAuthenticated ?\n        <div className=\"col-2\">\n          <div className=\"btn-success btn-sm\" onClick={() => loginWithRedirect()}>\n            Login\n          </div>\n        </div>:\n        <div className=\"col-2\">\n        <div className=\"btn-danger btn-sm\" onClick={() => {\n          props.resetAppToken();\n          logout()\n          }}>\n          Logout\n        </div>\n      </div>}\n      </div>\n    </div>\n  );\n}\nexport default LoginLogout;\n","import React, { useEffect, useState } from 'react';\nimport ActorsCard from './ActorsCard';\nimport MoviesCard from './MoviesCard';\nimport { dateFormatter } from '../utils/helpers';\nimport {addActor, addMovie, ajaxRequestPost, MOVIE_CAST_API, ACTORS_API, ajaxRequest, MOVIES_API, AUTH_DOMAIN} from '../utils/service';\nimport MoviesCastCard from './MoviesCastCard';\nimport LoginLogout from './LoginLogout';\nimport {useAuth0} from '@auth0/auth0-react';\n\nfunction Dashboard(props) {\n  const [isMovieUpdated, setIsMovieUpdated] = useState(false);\n  const [isActorUpdated, setIsActorUpdated] = useState(false);\n  const [isMovieActorUpdated, setMovieActorUpdated] = useState(false);\n  const [moviesList, setMoviesList] = useState([]);\n  const [actorsList, setActorsList] = useState([]);\n  const [selectedActorUpdate, setSelectedActorUpdate] = useState({});\n  const [selectedMovieUpdate, setSelectedMovieUpdate] = useState({});\n  const [appToken, setAppToken] = useState(null);\n  const [showCastContent, setCastShowContent] = useState(false);\n  const {\n    getAccessTokenSilently, loginWithRedirect\n  } = useAuth0();\n\n  useEffect(_=>{\n    (async()=>{\n      let token = null;\n    try {\n      console.log(\"Getting token!!!!\");\n       token = await getAccessTokenSilently({audience:'casting', scope:'get:actors get:movies'});\n    } catch (e) {\n      if (e.error === 'login_required') {\n        loginWithRedirect();\n      }\n      if (e.error === 'consent_required') {\n        loginWithRedirect();\n      }\n    }\n    setAppToken(token);\n    })();\n  },[]);\n\n  const addNewMovie = function(){\n    let reqData = {\n      'title': document.getElementById('movieTitleTxt').value,\n      'release_date': document.getElementById('movieReleaseDateVal').value\n    };\n    addMovie(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsMovieUpdated(true);\n      }\n      document.getElementById(\"dismissMovieModalBtn\").click();\n    }, appToken);\n  };\n\n  const addNewActor = function(){\n    let reqData = {\n      'name': document.getElementById('actorNameTxt').value,\n      'age': document.getElementById('actorAgeTxt').value,\n      'gender': document.querySelector('input[name = gender]:checked').value\n    };\n    addActor(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsActorUpdated(true);\n      }\n      document.getElementById(\"dismissActorModalBtn\").click();\n    }, appToken);\n  };\n\n  const addActorToMovie = function(){\n    ajaxRequestPost(MOVIE_CAST_API, {\n      'movie_id': document.getElementById('selectedMovie').value,\n      'actor_id': document.getElementById('selectedActor').value\n    }, (resData)=>{\n      if(resData.success){\n        setMovieActorUpdated(true);\n      }\n    });\n  }\n\n\n  const createMovieModal = function(){\n    return <div className=\"modal fade\" id=\"addMovieModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addMovieModalTitle\">Add New Movie</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieTitleTxt\">Title:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"movieTitleTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieReleaseDateVal\">Release Date:</label>\n                    <input type=\"date\" className=\"form-control\" id=\"movieReleaseDateVal\"/>                      \n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewMovie();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissMovieModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const createActorModal = function(){\n    return <div className=\"modal fade\" id=\"addActorModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addActorModalTitle\">Add Actor</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorNameTxt\">Name:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorNameTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorAgeTxt\">Age:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorAgeTxt\"/>  \n                  </div>\n                  <div className=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"male\"/>Male\n                    </label>\n                  </div>\n                  <div class=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"female\"/>Female\n                    </label>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewActor();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissActorModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const updateActorInput = function(){\n    const id = selectedActorUpdate.id;\n    const gender = document.querySelector(\"input[name='updateActorGender']:checked\").value;\n    const name = document.getElementById(\"updateActorTitleText\").value;\n    const age = document.getElementById(\"updateActorAgeVal\").value;\n    setSelectedActorUpdate({id, gender, name, age});\n\n  }\n  const updateMovieInput = function(){\n    const id = selectedMovieUpdate.id;\n    const title = document.getElementById(\"updateMovieTitleText\").value;\n    const release_date = document.getElementById(\"updateMovieReleaseDateVal\").value;\n    setSelectedMovieUpdate({id, title, release_date});\n\n  }\n\n  const createActorUpdateModal = function(){\n    return <div className=\"modal fade\" id=\"updateActorModal\" role=\"dialog\">\n    <div className=\"modal-dialog modal-dialog-centered\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"updateActorModalTitle\">Update Actor</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" id=\"updateActorModalDismiss\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"input-group\">\n            <label className=\"input-group\" for=\"updateActorTitleText\">Name:</label>\n            <input type=\"text\" className=\"form-control\" id=\"updateActorTitleText\" value={selectedActorUpdate.name} onChange={updateActorInput}/>  \n          </div>\n          <div className=\"input-group\">\n            <label className=\"input-group\" for=\"updateActorAgeVal\">Age:</label>\n            <input type=\"text\" className=\"form-control\" id=\"updateActorAgeVal\" value={selectedActorUpdate.age} onChange={updateActorInput}/>                      \n          </div>\n          <div className=\"input-group\">\n            <div className=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"updateActorGender\" value=\"male\" checked={selectedActorUpdate.gender==='male' && 'checked'} onChange={updateActorInput}/>Male\n                </label>\n              </div>\n              <div class=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"updateActorGender\" value=\"female\" checked={selectedActorUpdate.gender==='female' && 'checked'} onChange={updateActorInput}/>Female\n                </label>\n              </div>                   \n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"button\" style={{marginLeft:\"auto\", marginRight:\"auto\"}} className=\"btn btn-primary\" onClick={_=>{updateActor(selectedActorUpdate.id)}}>Update</button>\n        </div>\n      </div>   \n</div>\n</div>\n  }\n\n  const updateActor = function(actorId){\n        document.getElementById(\"updateActorModalDismiss\").click();\n        const reqData = selectedActorUpdate;\n        ajaxRequest(ACTORS_API+'/'+actorId, 'PATCH', reqData, (resData)=>{\n            if(resData.success){\n                setIsActorUpdated(true);\n            }\n        });\n    }\n\n    const createMovieUpdateModal = function(){\n      let releaseDate = selectedMovieUpdate.release_date ? dateFormatter(selectedMovieUpdate.release_date): \"\";\n      return <div className=\"modal fade\" id=\"updateMovieModal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Update Movie</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" id=\"updateMovieModalDismiss\">\n              <span>&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"input-group\">\n              <label className=\"input-group\" for=\"updateMovieTitleText\">Title:</label>\n              <input type=\"text\" className=\"form-control\" id=\"updateMovieTitleText\" value={selectedMovieUpdate.title} onChange={updateMovieInput}/>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"input-group\" for=\"updateMovieReleaseDateVal\">Release Date:</label>\n              <input type=\"date\" className=\"form-control\" id=\"updateMovieReleaseDateVal\" value={releaseDate} onChange={updateMovieInput}/>                      \n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" style={{marginLeft:\"auto\", marginRight:\"auto\"}} className=\"btn btn-primary\" onClick={_=>{updateMovie(selectedMovieUpdate.id)}}>Update</button>\n          </div>\n        </div>   \n  </div>\n  </div>\n    }\n\n    const updateMovie = function(movieId){\n      // Let's close the modal while updating values\n      document.getElementById(\"updateMovieModalDismiss\").click();\n      ajaxRequest(MOVIES_API+'/'+movieId, 'PATCH', selectedMovieUpdate, (resData)=>{\n        if(resData.success){\n          setIsMovieUpdated(true);\n        }\n      },appToken);\n    }\n\n  return (\n    <div className='row'>\n      <div className='col'>\n          <div className=\"nav nav-tabs\" id=\"dashboardTab\" role=\"tablist\">\n              <a className=\"nav-item nav-link active\" data-toggle=\"tab\" href=\"#loginLogout\" role=\"tab\">Login/Logout</a>\n              <a className=\"nav-item nav-link\" data-toggle=\"tab\" href=\"#viewContent\" role=\"tab\">View/Edit</a>\n              <a className=\"nav-item nav-link\" data-toggle=\"tab\" href=\"#manageCastContent\" role=\"tab\">Manage Cast</a>\n          </div>\n          <div className=\"tab-content\" id=\"tabDashboardContent\">\n            <div className=\"tab-pane fade show active\" id=\"loginLogout\" role=\"tabpanel\">\n              <LoginLogout resetAppToken={()=>setAppToken(null)}/>\n            </div>\n            <div className=\"tab-pane fade\" id=\"viewContent\" role=\"tabpanel\" >\n              <div className=\"row\">\n                <div className='col'>\n                  <h3>Movies</h3>\n                  <div className='btn-primary btn-lg' id='createMovieBtn' data-toggle=\"modal\" data-target=\"#addMovieModal\">Create Movie</div>\n                    {createMovieModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <MoviesCard loadMovies={isMovieUpdated} appToken={appToken} isMovieDeleted={(_=>{setMovieActorUpdated(true)})} loadMoviesList={(resData)=>{\n                      setMoviesList(resData);\n                      setIsMovieUpdated(false);\n                      }} chooseUpdate={setSelectedMovieUpdate}/>\n                  </div>\n                  {createMovieUpdateModal()}\n                </div>\n                <div className='col'>\n                  <h3>Actors</h3>\n                  <div className='btn-primary btn-lg' id='createActorBtn' data-toggle=\"modal\" data-target=\"#addActorModal\">Create Actor</div>\n                    {createActorModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <ActorsCard appToken={appToken} loadActors={isActorUpdated} isActorDeleted={(_=>{setMovieActorUpdated(true)})} loadActorsList={(resData)=>{\n                      setActorsList(resData);\n                      setIsActorUpdated(false);\n                      }} chooseUpdate={setSelectedActorUpdate} />\n                  </div>\n                  {createActorUpdateModal()}\n                </div>\n              </div>\n            </div>\n            <div className=\"tab-pane fade\" id=\"manageCastContent\" role=\"tabpanel\">\n              <div className=\"row\">\n                {showCastContent?\n                <div className=\"col\">\n                  <div className=\"row\" style={{marginTop:20}}>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedMovie\">\n                        <option disabled selected>Select Movie</option>\n                        {moviesList.map((movie)=>{\n                          return <option value={movie.id}>{movie.title}</option>\n                        })}\n                      </select>\n                    </div>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedActor\">\n                        <option disabled selected>Select Actor</option>\n                        {actorsList.map((actor)=>{\n                          return <option value={actor.id}>{actor.name}</option>\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"row\" style={{marginTop:10}}>\n                    <div className=\"col\">\n                      <div className=\"btn btn-success btn-lg btn-block\" onClick={addActorToMovie}>\n                        Cast to the movie\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <MoviesCastCard updateShowContent={setCastShowContent} appToken={appToken} isUpdated={isMovieActorUpdated} disableIsUpdated={()=> setMovieActorUpdated(false)}/>\n                    </div>\n                    \n                  </div>    \n                </div>: \n                <div className='col d-flex justify-content-center' style={{marginTop:100}}>\n                  <div class=\"card text-white bg-secondary\">\n                      <div class=\"card-body\">\n                          <h5 class=\"card-title\">Not Authorized</h5>\n                          <p class=\"card-text\">You don't have suitable permission to view the contents!!!</p>\n                      </div>\n                  </div>\n                </div>}\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n\n  );\n}\nexport default Dashboard;","/**\n * Convert standard date string to YYYY-MM-dd or YYYY/MM/dd \n * @param {date string} dateString \n */\nconst dateFormatter = function(dateString, sep='-'){\n    // Let's remove the timezone concept since we don't require timezone in this particular requirement\n    dateString = dateString.replace(\"GMT\", \"\");\n    let date = new Date(dateString+ \" \");\n    const monthFormat = (date.getMonth()+1)<10 ? '0'+(date.getMonth()+1) : (date.getMonth()+1); \n    return `${date.getFullYear()}${sep}${monthFormat}${sep}${date.getDate()}`;\n}\nexport {dateFormatter};","import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer} from 'react-toastify';\n// Main App Components\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n      <ToastContainer/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <Auth0Provider\n    domain=\"dev-prav-auth.us.auth0.com\"\n    clientId=\"DavU4i56mMk4qPck3ruSla263xEczzJ5\"\n    redirectUri={window.location.origin}\n    audience=\"casting\"\n    scope=\"get:actors get:movies\"\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}