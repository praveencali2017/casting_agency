{"version":3,"sources":["utils/service.js","components/ActorsCard.js","components/MoviesCard.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_URL","window","location","origin","MOVIES_API","ACTORS_API","ActorsCard","props","useState","actors","setActors","useEffect","_","loadActors","fetch","then","response","json","resData","success","data","className","map","actor","style","padding","marginLeft","width","color","name","age","gender","id","MoviesCard","movies","setMovies","loadMovies","movie","title","release_date","Dashboard","isMovieUpdated","setIsMovieUpdated","isActorUpdated","setIsActorUpdated","data-toggle","data-target","role","type","data-dismiss","for","onClick","reqData","document","getElementById","value","method","body","JSON","stringify","headers","Headers","click","addNewMovie","marginTop","class","querySelector","addNewActor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"js/main.1ca60c4b.chunk.js","sourcesContent":["const SERVER_URL = `${window.location.origin}/`;\nconst MOVIES_API = SERVER_URL+'v1/movies';\nconst ACTORS_API = SERVER_URL+'v1/actors';\n\nexport {SERVER_URL, MOVIES_API, ACTORS_API};","import React, { useEffect, useState } from 'react';\nimport { ACTORS_API } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        loadActors();\n      }, []);\n\n      useEffect(_=>{\n        if(props.loadActors){\n          loadActors();\n        }\n      },[props.loadActors])\n      \n      const loadActors = function(){\n        fetch(ACTORS_API)\n        .then(response => response.json())\n        .then(resData=>{\n          if(resData && resData.success){\n            setActors(resData.data);\n          }\n        });\n      }\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'actor-id-btn-'+actor.id}>Update</div>\n                </div>\n              </div>\n      </div>\n    };\n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","import React, { useEffect, useState } from 'react';\nimport { MOVIES_API } from '../utils/service';\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    loadMovies();\n  }, []);\n  useEffect(_=>{\n    if(props.loadMovies){\n      loadMovies();\n    }\n  },[props.loadMovies])\n  \n  const loadMovies = function(){\n    fetch(MOVIES_API)\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n          setMovies(resData.data);\n        }\n    }); \n  }\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {movie.release_date}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}>Update</div>\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","import React, { useState } from 'react';\nimport ActorsCard from './ActorsCard';\nimport MoviesCard from './MoviesCard';\nimport { MOVIES_API, ACTORS_API } from '../utils/service';\nfunction Dashboard(props) {\n  const [isMovieUpdated, setIsMovieUpdated] = useState(false);\n  const [isActorUpdated, setIsActorUpdated] = useState(false);\n  \n  const addNewMovie = function(){\n    let reqData = {\n      'title': document.getElementById('movieTitleTxt').value,\n      'release_date': document.getElementById('movieReleaseDateVal').value\n    };\n    fetch(MOVIES_API, {\n      method:'POST',\n      body: JSON.stringify(reqData),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })})\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n          setIsMovieUpdated(true);\n        }\n        document.getElementById(\"dismissMovieModalBtn\").click();\n    }) \n  };\n  const addNewActor = function(){\n    let reqData = {\n      'name': document.getElementById('actorNameTxt').value,\n      'age': document.getElementById('actorAgeTxt').value,\n      'gender': document.querySelector('input[name = gender]:checked').value\n    };\n    fetch(ACTORS_API, {\n      method:'POST',\n      body: JSON.stringify(reqData),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })})\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n          setIsActorUpdated(true);\n        }\n        document.getElementById(\"dismissActorModalBtn\").click();\n    }) \n  }\n\n  const createMovieModal = function(){\n    return <div className=\"modal fade\" id=\"addMovieModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addMovieModalTitle\">Add New Movie</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieTitleTxt\">Title:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"movieTitleTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieReleaseDateVal\">Release Date:</label>\n                    <input type=\"date\" className=\"form-control\" id=\"movieReleaseDateVal\"/>                      \n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewMovie();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissMovieModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const createActorModal = function(){\n    return <div className=\"modal fade\" id=\"addActorModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addActorModalTitle\">Add Actor</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorNameTxt\">Name:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorNameTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorAgeTxt\">Age:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorAgeTxt\"/>  \n                  </div>\n                  <div className=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"male\"/>Male\n                    </label>\n                  </div>\n                  <div class=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"female\"/>Female\n                    </label>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewActor();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissActorModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n  return (\n    <div className='row'>\n      <div className='col'>\n        {/* Body */}\n        <div className='row'>\n        <div className='col'>\n          <h3>Movies</h3>\n          <div className='btn-primary btn-lg' id='createMovieBtn' data-toggle=\"modal\" data-target=\"#addMovieModal\">Create Movie</div>\n          {createMovieModal()}\n          <div className='container' style={{marginLeft:15, marginTop:10}}>\n            <MoviesCard loadMovies={isMovieUpdated}/>\n          </div>\n        </div>\n        <div className='col'>\n          <h3>Actors</h3>\n          <div className='btn-primary btn-lg' id='createActorBtn' data-toggle=\"modal\" data-target=\"#addActorModal\">Create Actor</div>\n          {createActorModal()}\n          <div className='container' style={{marginLeft:15, marginTop:10}}>\n            <ActorsCard loadActors={isActorUpdated}/>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\nexport default Dashboard;","import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\n\n// Main App Components\nfunction App() {\n  ;\n\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}