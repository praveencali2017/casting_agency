{"version":3,"sources":["utils/service.js","components/ActorsCard.js","components/MoviesCard.js","utils/helpers.js","components/MoviesCastCard.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_URL","window","location","origin","MOVIES_API","ACTORS_API","MOVIE_CAST_API","fetchMovies","callback","fetch","then","response","json","resData","success","data","fetchActors","ActorsCard","props","useState","actors","setActors","useEffect","_","loadActorsList","loadActors","className","map","actor","style","padding","marginLeft","width","color","name","age","gender","id","MoviesCard","movies","setMovies","console","log","loadMoviesList","loadMovies","createMovieUpdateModal","movie","releaseDate","dateString","sep","replace","date","Date","monthFormat","getMonth","getFullYear","getDate","dateFormatter","release_date","role","type","data-dismiss","for","defaultValue","title","marginRight","onClick","updateMovie","movieId","document","getElementById","click","reqData","value","otherMovies","filter","method","body","JSON","stringify","headers","Headers","toDateString","data-toggle","data-target","cursor","MoviesCastCard","moviesCast","setMoviesCast","fetchMoviesCrew","isUpdated","disableIsUpdated","movieCast","class","Dashboard","isMovieUpdated","setIsMovieUpdated","isActorUpdated","setIsActorUpdated","isMovieActorUpdated","setMovieActorUpdated","moviesList","setMoviesList","actorsList","setActorsList","addNewMovie","addMovie","addNewActor","addActor","querySelector","href","marginTop","disabled","selected","url","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"js/main.4a5bc17d.chunk.js","sourcesContent":["const SERVER_URL = `${window.location.origin}/`;\nconst MOVIES_API = SERVER_URL+'v1/movies';\nconst ACTORS_API = SERVER_URL+'v1/actors';\nconst MOVIE_CAST_API = SERVER_URL+'v1/movies_cast';\n\nconst fetchMovies = function(callback){\n    fetch(MOVIES_API)\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    }); \n  };\nconst fetchActors = function(callback){\n    fetch(ACTORS_API)\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    });\n};\nconst addMovie = function(reqData, callback){\n    fetch(MOVIES_API, {\n      method:'POST',\n      body: JSON.stringify(reqData),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }) \n  };\n\nconst addActor = function(reqData, callback){\n    fetch(ACTORS_API, {\n        method:'POST',\n        body: JSON.stringify(reqData),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }) \n  };\n\nconst ajaxRequestPost = function(url, reqData, callback){\n    fetch(url, {\n        method:'POST',\n        body: JSON.stringify(reqData),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }); \n  };\n\nconst ajaxRequest = function(url, method, reqData, callback){\nfetch(url, {\n    method: method,\n    body: reqData?JSON.stringify(reqData): null,\n    headers: new Headers({\n    'Content-Type': 'application/json'\n    })})\n.then(response => response.json())\n.then(resData=>{\n    if(callback){\n        callback(resData);\n    }\n}); \n};\n\nconst ajaxRequestGet = function(url, callback){\n    fetch(url)\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    });\n  };\n\nexport {SERVER_URL, MOVIES_API, ACTORS_API, MOVIE_CAST_API, fetchMovies, fetchActors, addMovie, addActor, ajaxRequestGet, ajaxRequestPost, ajaxRequest};","import React, { useEffect, useState } from 'react';\nimport {fetchActors } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n      }, []);\n\n    useEffect(_=>{\n    if(props.loadActors){\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n    }\n    },[props.loadActors]);\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'actor-id-btn-'+actor.id}>Update</div>\n                </div>\n              </div>\n      </div>\n    };\n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","import React, { useEffect, useState } from 'react';\nimport { dateFormatter } from '../utils/helpers';\nimport {ajaxRequest, MOVIES_API, fetchMovies } from '../utils/service';\n\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    fetchMovies((resData)=>{\n      console.log(resData);\n      setMovies(resData);\n      props.loadMoviesList(resData);\n    });\n  }, []);\n\n  useEffect(_=>{\n    if(props.loadMovies){\n      fetchMovies((resData)=>{\n        setMovies(resData);\n        props.loadMoviesList(resData);\n      });\n    }\n  },[props.loadMovies]);\n\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {new Date(movie.release_date.replace(\"GMT\", \"\")).toDateString()}</p>\n                  <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}\n                  data-toggle=\"modal\" data-target={\"#updateMovieModal_\"+movie.id} style={{cursor:\"pointer\"}}>Update</div>\n                </div>\n              </div>\n              {createMovieUpdateModal(movie)}\n            </div>\n  };\n\n\n\n  const createMovieUpdateModal = function(movie){\n    const releaseDate = dateFormatter(movie.release_date);\n    return <div className=\"modal fade\" id={\"updateMovieModal_\"+movie.id} role=\"dialog\">\n    <div className=\"modal-dialog modal-dialog-centered\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id={\"updateMovieModalTitle_\"+movie.id}>Update Movie</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" id={\"updateMovieModalDismiss_\"+movie.id}>\n            <span>&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"input-group\">\n            <label className=\"input-group\" for={\"updateMovieTitleText_\"+movie.id}>Title:</label>\n            <input type=\"text\" className=\"form-control\" id={\"updateMovieTitleText_\"+movie.id} defaultValue={movie.title}/>  \n          </div>\n          <div className=\"input-group\">\n            <label className=\"input-group\" for={\"updateMovieReleaseDateVal_\"+movie.id}>Release Date:</label>\n            <input type=\"date\" className=\"form-control\" id={\"updateMovieReleaseDateVal_\"+movie.id} defaultValue={releaseDate}/>                      \n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"button\" style={{marginLeft:\"auto\", marginRight:\"auto\"}} className=\"btn btn-primary\" onClick={_=>{updateMovie(movie.id)}}>Update</button>\n        </div>\n      </div>   \n</div>\n</div>\n  }\n\n  const updateMovie = function(movieId){\n    // Let's close the modal while updating values\n    document.getElementById(\"updateMovieModalDismiss_\"+movieId).click();\n    const title = document.getElementById('updateMovieTitleText_'+movieId).value;\n    const releaseDate = document.getElementById('updateMovieReleaseDateVal_'+movieId).value;\n    console.log({\n      'title': title,\n      'release_date': releaseDate\n    });\n    ajaxRequest(MOVIES_API+'/'+movieId, 'PATCH', {\n      'title': title,\n      'release_date': releaseDate\n    }, (resData)=>{\n      if(resData.success && resData.data){\n        const otherMovies = movies.filter(movie=> movie.id != movieId);\n        setMovies([...otherMovies, resData.data]);  \n      }\n    });\n  }\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","/**\n * Convert standard date string to YYYY-MM-dd or YYYY/MM/dd \n * @param {date string} dateString \n */\nconst dateFormatter = function(dateString, sep='-'){\n    // Let's remove the timezone concept since we don't require timezone in this particular requirement\n    dateString = dateString.replace(\"GMT\", \"\");\n    let date = new Date(dateString);\n    const monthFormat = (date.getMonth()+1)<10 ? '0'+(date.getMonth()+1) : (date.getMonth()+1); \n    return `${date.getFullYear()}${sep}${monthFormat}${sep}${date.getDate()}`;\n}\nexport {dateFormatter};","import React, { useEffect, useState } from 'react';\nimport {MOVIE_CAST_API, ajaxRequestGet } from '../utils/service';\n\nfunction MoviesCastCard(props) {\n  const [moviesCast, setMoviesCast] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n        fetchMoviesCrew();\n    },[]);\n  \n  useEffect(_=>{\n    console.log(\"Updated!!!!\");\n    console.log(props.isUpdated);\n    if(props.isUpdated){\n        fetchMoviesCrew();\n    }\n  }, [props.isUpdated]);\n\n  const fetchMoviesCrew = function(){\n    ajaxRequestGet(MOVIE_CAST_API, (resData)=>{\n        if(resData.success){\n            setMoviesCast(resData.data);\n            props.disableIsUpdated();\n        }\n    });\n  }\n\n  const createMovieCastsCards = function(movieCast){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movieCast.movie.title +\"'s Actors\"}</h5>\n                  <p>Movie Title: {movieCast.movie.title}</p>\n                  <label for=\"\">Actors:</label>\n                  {movieCast.actors.map((actor)=>{\n                      return <span class=\"badge badge-pill badge-primary\">{actor.name}</span>\n                  })}\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {moviesCast.map(createMovieCastsCards)}\n    </div>\n\n  );\n}\nexport default MoviesCastCard;","import React, { useState } from 'react';\nimport ActorsCard from './ActorsCard';\nimport MoviesCard from './MoviesCard';\nimport {addActor, addMovie, ajaxRequestPost, MOVIE_CAST_API} from '../utils/service';\nimport MoviesCastCard from './MoviesCastCard';\nfunction Dashboard(props) {\n  const [isMovieUpdated, setIsMovieUpdated] = useState(false);\n  const [isActorUpdated, setIsActorUpdated] = useState(false);\n  const [isMovieActorUpdated, setMovieActorUpdated] = useState(false);\n  const [moviesList, setMoviesList] = useState([]);\n  const [actorsList, setActorsList] = useState([]);\n  \n  const addNewMovie = function(){\n    let reqData = {\n      'title': document.getElementById('movieTitleTxt').value,\n      'release_date': document.getElementById('movieReleaseDateVal').value\n    };\n    addMovie(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsMovieUpdated(true);\n      }\n      document.getElementById(\"dismissMovieModalBtn\").click();\n    });\n  };\n\n  const addNewActor = function(){\n    let reqData = {\n      'name': document.getElementById('actorNameTxt').value,\n      'age': document.getElementById('actorAgeTxt').value,\n      'gender': document.querySelector('input[name = gender]:checked').value\n    };\n    addActor(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsActorUpdated(true);\n      }\n      document.getElementById(\"dismissActorModalBtn\").click();\n    });\n  };\n\n  const addActorToMovie = function(){\n    ajaxRequestPost(MOVIE_CAST_API, {\n      'movie_id': document.getElementById('selectedMovie').value,\n      'actor_id': document.getElementById('selectedActor').value\n    }, (resData)=>{\n      if(resData.success){\n        setMovieActorUpdated(true);\n      }\n    });\n  }\n\n\n  const createMovieModal = function(){\n    return <div className=\"modal fade\" id=\"addMovieModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addMovieModalTitle\">Add New Movie</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieTitleTxt\">Title:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"movieTitleTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieReleaseDateVal\">Release Date:</label>\n                    <input type=\"date\" className=\"form-control\" id=\"movieReleaseDateVal\"/>                      \n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewMovie();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissMovieModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const createActorModal = function(){\n    return <div className=\"modal fade\" id=\"addActorModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addActorModalTitle\">Add Actor</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorNameTxt\">Name:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorNameTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorAgeTxt\">Age:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorAgeTxt\"/>  \n                  </div>\n                  <div className=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"male\"/>Male\n                    </label>\n                  </div>\n                  <div class=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"female\"/>Female\n                    </label>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewActor();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissActorModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n  return (\n    <div className='row'>\n      <div className='col'>\n          <div className=\"nav nav-tabs\" id=\"dashboardTab\" role=\"tablist\">\n              <a className=\"nav-item nav-link active\" data-toggle=\"tab\" href=\"#viewContent\" role=\"tab\">View/Edit</a>\n              <a className=\"nav-item nav-link\" data-toggle=\"tab\" href=\"#manageCastContent\" role=\"tab\">Manage Cast</a>\n          </div>\n          <div className=\"tab-content\" id=\"tabDashboardContent\">\n            <div className=\"tab-pane fade show active\" id=\"viewContent\" role=\"tabpanel\" >\n              <div className=\"row\">\n                <div className='col'>\n                  <h3>Movies</h3>\n                  <div className='btn-primary btn-lg' id='createMovieBtn' data-toggle=\"modal\" data-target=\"#addMovieModal\">Create Movie</div>\n                    {createMovieModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <MoviesCard loadMovies={isMovieUpdated} loadMoviesList={(resData)=>{\n                      setMoviesList(resData);\n                      setIsMovieUpdated(false);\n                      }}/>\n                  </div>\n                </div>\n                <div className='col'>\n                  <h3>Actors</h3>\n                  <div className='btn-primary btn-lg' id='createActorBtn' data-toggle=\"modal\" data-target=\"#addActorModal\">Create Actor</div>\n                    {createActorModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <ActorsCard loadActors={isActorUpdated} loadActorsList={(resData)=>{\n                      setActorsList(resData);\n                      setIsActorUpdated(false);\n                      }} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"tab-pane fade\" id=\"manageCastContent\" role=\"tabpanel\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"row\" style={{marginTop:20}}>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedMovie\">\n                        <option disabled selected>Select Movie</option>\n                        {moviesList.map((movie)=>{\n                          return <option value={movie.id}>{movie.title}</option>\n                        })}\n                      </select>\n                    </div>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedActor\">\n                        <option disabled selected>Select Actor</option>\n                        {actorsList.map((actor)=>{\n                          return <option value={actor.id}>{actor.name}</option>\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"row\" style={{marginTop:10}}>\n                    <div className=\"col\">\n                      <div className=\"btn btn-success btn-lg btn-block\" onClick={addActorToMovie}>\n                        Cast to the movie\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <MoviesCastCard isUpdated={isMovieActorUpdated} disableIsUpdated={()=> setMovieActorUpdated(false)}/>\n                    </div>\n                  </div>    \n                </div>\n                \n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n\n  );\n}\nexport default Dashboard;","import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\n\n// Main App Components\nfunction App() {\n  ;\n\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}