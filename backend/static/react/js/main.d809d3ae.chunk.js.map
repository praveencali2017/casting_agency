{"version":3,"sources":["utils/service.js","components/ActorsCard.js","components/MoviesCard.js","components/MoviesCastCard.js","components/Dashboard.js","utils/helpers.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_URL","window","location","origin","MOVIES_API","ACTORS_API","MOVIE_CAST_API","ajaxRequest","url","method","reqData","callback","fetch","body","JSON","stringify","headers","Headers","then","response","json","resData","ActorsCard","props","useState","actors","setActors","useEffect","_","loadActors","loadActorsList","success","data","className","map","actor","style","padding","marginLeft","width","color","name","age","gender","id","data-toggle","data-target","cursor","onClick","chooseUpdate","confirm","isActorDeleted","deleteActor","MoviesCard","movies","setMovies","loadMovies","loadMoviesList","movie","title","Date","release_date","replace","toDateString","isMovieDeleted","deleteMovie","MoviesCastCard","moviesCast","setMoviesCast","fetchMoviesCrew","isUpdated","disableIsUpdated","movieCast","class","Dashboard","isMovieUpdated","setIsMovieUpdated","isActorUpdated","setIsActorUpdated","isMovieActorUpdated","setMovieActorUpdated","moviesList","setMoviesList","actorsList","setActorsList","selectedActorUpdate","setSelectedActorUpdate","selectedMovieUpdate","setSelectedMovieUpdate","addNewMovie","addMovie","document","getElementById","value","click","addNewActor","addActor","querySelector","updateActorInput","updateMovieInput","updateActor","actorId","updateMovie","movieId","role","href","type","data-dismiss","for","marginTop","releaseDate","dateString","sep","date","monthFormat","getMonth","getFullYear","getDate","dateFormatter","onChange","marginRight","createMovieUpdateModal","checked","disabled","selected","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"js/main.d809d3ae.chunk.js","sourcesContent":["const SERVER_URL = `${window.location.origin}/`;\nconst MOVIES_API = SERVER_URL+'v1/movies';\nconst ACTORS_API = SERVER_URL+'v1/actors';\nconst MOVIE_CAST_API = SERVER_URL+'v1/movies_cast';\n\nconst fetchMovies = function(callback){\n    fetch(MOVIES_API)\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    }); \n  };\nconst fetchActors = function(callback){\n    fetch(ACTORS_API)\n    .then(response => response.json())\n    .then(resData=>{\n        if(resData && resData.success){\n            callback(resData.data);\n        }\n    });\n};\nconst addMovie = function(reqData, callback){\n    fetch(MOVIES_API, {\n      method:'POST',\n      body: JSON.stringify(reqData),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }) \n  };\n\nconst addActor = function(reqData, callback){\n    fetch(ACTORS_API, {\n        method:'POST',\n        body: JSON.stringify(reqData),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }) \n  };\n\nconst ajaxRequestPost = function(url, reqData, callback){\n    fetch(url, {\n        method:'POST',\n        body: JSON.stringify(reqData),\n        headers: new Headers({\n        'Content-Type': 'application/json'\n        })})\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    }); \n  };\n\nconst ajaxRequest = function(url, method, reqData, callback){\nfetch(url, {\n    method: method,\n    body: reqData?JSON.stringify(reqData): null,\n    headers: new Headers({\n    'Content-Type': 'application/json'\n    })})\n.then(response => response.json())\n.then(resData=>{\n    if(callback){\n        callback(resData);\n    }\n}); \n};\n\nconst ajaxRequestGet = function(url, callback){\n    fetch(url)\n    .then(response => response.json())\n    .then(resData=>{\n        callback(resData);\n    });\n  };\n\nexport {SERVER_URL, MOVIES_API, ACTORS_API, MOVIE_CAST_API, fetchMovies, fetchActors, addMovie, addActor, ajaxRequestGet, ajaxRequestPost, ajaxRequest};","import React, { useEffect, useState } from 'react';\nimport {ACTORS_API, fetchActors, ajaxRequest } from '../utils/service';\n\nfunction ActorsCard(props) {\n    const [actors, setActors] = useState([]);\n    // Fetch available actors\n    useEffect(_=>{\n        loadActors()\n      }, []);\n\n    useEffect(_=>{\n    if(props.loadActors){\n        loadActors();\n    }\n    },[props.loadActors]);\n\n    const loadActors = function(){\n        fetchActors((resData)=>{\n            setActors(resData);\n            props.loadActorsList(resData);\n        });\n    }\n\n    const deleteActor = function(actor){\n        const choice = window.confirm(`Are you sure you want to delete the actor ${actor.name} ?`);\n        if(!choice){\n          return;\n        }\n        ajaxRequest(ACTORS_API+'/'+actor.id, 'DELETE', null, (resData)=>{\n          if(resData.success){\n            // Need to load associations. Hence we need to trigger an update\n            props.isActorDeleted();\n            loadActors();\n          }\n        })\n      }\n\n    const createActorCards = function(actor){\n      return  <div className='col' style={{padding:3, marginLeft:2}}>\n                <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{actor.name}</h5>\n                  <p style={{color:'black'}}>Age: {actor.age}</p>\n                  <p style={{color:'black'}}>Gender: {actor.gender}</p>\n                  <div className='row'>\n                    <div className='col'>\n                        <div className=\"btn-success btn-sm text-center\" id={'actorUpdateBtnContainer'+actor.id}\n                        data-toggle=\"modal\" data-target=\"#updateActorModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(actor)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteActor_'+actor.id} style={{cursor:\"pointer\"}} onClick={_=> deleteActor(actor)}>Delete</div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n      </div>\n    };  \n  \n    return (\n      <div className='row'>\n         {actors.map(createActorCards)}\n      </div>\n  \n    );\n  }\n  export default ActorsCard;","import React, { useEffect, useState } from 'react';\nimport {ajaxRequest, fetchMovies, MOVIES_API } from '../utils/service';\n\n\nfunction MoviesCard(props) {\n  const [movies, setMovies] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n    loadMovies();\n  }, []);\n\n  useEffect(_=>{\n    if(props.loadMovies){\n      loadMovies();\n    }\n  },[props.loadMovies]);\n\n  const loadMovies = function(){\n    fetchMovies((resData)=>{\n      setMovies(resData);\n      props.loadMoviesList(resData);\n    });\n  }\n  const deleteMovie = function(movie){\n\n    const choice = window.confirm(`Are you sure you want to delete the movie ${movie.title} ?`);\n    if(!choice){\n      return;\n    }\n    ajaxRequest(MOVIES_API+'/'+movie.id, 'DELETE', null, (resData)=>{\n      if(resData.success){\n        // Need to load associations. Hence we need to trigger an update\n        props.isMovieDeleted();\n        loadMovies();\n      }\n    })\n  }\n\n  const createMovieCards = function(movie){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card bg-light mb-3\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movie.title}</h5>\n                  <p>Releases on: {new Date(movie.release_date.replace(\"GMT\", \"\")).toDateString()}</p>\n                  <div className='row'>\n                    <div className='col'>\n                      <div className=\"btn-success btn-sm text-center\" id={'movie-id-btn-'+movie.id}\n                      data-toggle=\"modal\" data-target=\"#updateMovieModal\" style={{cursor:\"pointer\"}} onClick={_=>props.chooseUpdate(movie)}>Update</div>\n                    </div>\n                    <div className='col'>\n                      <div className=\"btn-danger btn-sm text-center\" id={'deleteMovie_'+movie.id} style={{cursor:\"pointer\"}} onClick={_=> deleteMovie(movie)}>Delete</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {movies.map(createMovieCards)}\n    </div>\n\n  );\n}\nexport default MoviesCard;","import React, { useEffect, useState } from 'react';\nimport {MOVIE_CAST_API, ajaxRequestGet } from '../utils/service';\n\nfunction MoviesCastCard(props) {\n  const [moviesCast, setMoviesCast] = useState([]);\n  // Fetch available movies\n  useEffect(_=>{\n        fetchMoviesCrew();\n    },[]);\n  \n  useEffect(_=>{\n    if(props.isUpdated){\n        fetchMoviesCrew();\n    }\n  }, [props.isUpdated]);\n\n  const fetchMoviesCrew = function(){\n    ajaxRequestGet(MOVIE_CAST_API, (resData)=>{\n        if(resData.success){\n            setMoviesCast(resData.data);\n            props.disableIsUpdated();\n        }\n    });\n  }\n\n  const createMovieCastsCards = function(movieCast){\n    return  <div className='col' style={{padding:3, marginLeft:2}}>\n              <div className=\"card\" style={{width:300}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\" style={{color:'black'}}>{movieCast.movie.title +\"'s Actors\"}</h5>\n                  <p>Movie Title: {movieCast.movie.title}</p>\n                  <label>Actors:</label>\n                  {movieCast.actors.map((actor)=>{\n                      return <span class=\"badge badge-pill badge-primary\">{actor.name}</span>\n                  })}\n                </div>\n              </div>\n            </div>\n  };\n\n  return (\n    <div className='row'>\n       {moviesCast.map(createMovieCastsCards)}\n    </div>\n\n  );\n}\nexport default MoviesCastCard;","import React, { useState } from 'react';\nimport ActorsCard from './ActorsCard';\nimport MoviesCard from './MoviesCard';\nimport { dateFormatter } from '../utils/helpers';\nimport {addActor, addMovie, ajaxRequestPost, MOVIE_CAST_API, ACTORS_API, ajaxRequest, MOVIES_API} from '../utils/service';\nimport MoviesCastCard from './MoviesCastCard';\nfunction Dashboard(props) {\n  const [isMovieUpdated, setIsMovieUpdated] = useState(false);\n  const [isActorUpdated, setIsActorUpdated] = useState(false);\n  const [isMovieActorUpdated, setMovieActorUpdated] = useState(false);\n  const [moviesList, setMoviesList] = useState([]);\n  const [actorsList, setActorsList] = useState([]);\n  const [selectedActorUpdate, setSelectedActorUpdate] = useState({});\n  const [selectedMovieUpdate, setSelectedMovieUpdate] = useState({});\n  \n  const addNewMovie = function(){\n    let reqData = {\n      'title': document.getElementById('movieTitleTxt').value,\n      'release_date': document.getElementById('movieReleaseDateVal').value\n    };\n    addMovie(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsMovieUpdated(true);\n      }\n      document.getElementById(\"dismissMovieModalBtn\").click();\n    });\n  };\n\n  const addNewActor = function(){\n    let reqData = {\n      'name': document.getElementById('actorNameTxt').value,\n      'age': document.getElementById('actorAgeTxt').value,\n      'gender': document.querySelector('input[name = gender]:checked').value\n    };\n    addActor(reqData, (resData)=>{\n      if(resData && resData.success){\n        setIsActorUpdated(true);\n      }\n      document.getElementById(\"dismissActorModalBtn\").click();\n    });\n  };\n\n  const addActorToMovie = function(){\n    ajaxRequestPost(MOVIE_CAST_API, {\n      'movie_id': document.getElementById('selectedMovie').value,\n      'actor_id': document.getElementById('selectedActor').value\n    }, (resData)=>{\n      if(resData.success){\n        setMovieActorUpdated(true);\n      }\n    });\n  }\n\n\n  const createMovieModal = function(){\n    return <div className=\"modal fade\" id=\"addMovieModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addMovieModalTitle\">Add New Movie</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieTitleTxt\">Title:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"movieTitleTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"movieReleaseDateVal\">Release Date:</label>\n                    <input type=\"date\" className=\"form-control\" id=\"movieReleaseDateVal\"/>                      \n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewMovie();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissMovieModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const createActorModal = function(){\n    return <div className=\"modal fade\" id=\"addActorModal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"addActorModalTitle\">Add Actor</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                    <span>&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorNameTxt\">Name:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorNameTxt\"/>  \n                  </div>\n                  <div className=\"input-group\">\n                    <label className=\"input-group\" for=\"actorAgeTxt\">Age:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"actorAgeTxt\"/>  \n                  </div>\n                  <div className=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"male\"/>Male\n                    </label>\n                  </div>\n                  <div class=\"form-check-inline\">\n                    <label className=\"form-check-label\">\n                      <input type=\"radio\" className=\"form-check-input\" name=\"gender\" value=\"female\"/>Female\n                    </label>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={_=>{addNewActor();}}>Add</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"dismissActorModalBtn\">Close</button>\n                </div>\n              </div>   \n        </div>\n    </div>\n  }\n\n  const updateActorInput = function(){\n    const id = selectedActorUpdate.id;\n    const gender = document.querySelector(\"input[name='updateActorGender']:checked\").value;\n    const name = document.getElementById(\"updateActorTitleText\").value;\n    const age = document.getElementById(\"updateActorAgeVal\").value;\n    setSelectedActorUpdate({id, gender, name, age});\n\n  }\n  const updateMovieInput = function(){\n    const id = selectedMovieUpdate.id;\n    const title = document.getElementById(\"updateMovieTitleText\").value;\n    const release_date = document.getElementById(\"updateMovieReleaseDateVal\").value;\n    setSelectedMovieUpdate({id, title, release_date});\n\n  }\n\n  const createActorUpdateModal = function(){\n    return <div className=\"modal fade\" id=\"updateActorModal\" role=\"dialog\">\n    <div className=\"modal-dialog modal-dialog-centered\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"updateActorModalTitle\">Update Actor</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" id=\"updateActorModalDismiss\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"input-group\">\n            <label className=\"input-group\" for=\"updateActorTitleText\">Name:</label>\n            <input type=\"text\" className=\"form-control\" id=\"updateActorTitleText\" value={selectedActorUpdate.name} onChange={updateActorInput}/>  \n          </div>\n          <div className=\"input-group\">\n            <label className=\"input-group\" for=\"updateActorAgeVal\">Age:</label>\n            <input type=\"text\" className=\"form-control\" id=\"updateActorAgeVal\" value={selectedActorUpdate.age} onChange={updateActorInput}/>                      \n          </div>\n          <div className=\"input-group\">\n            <div className=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"updateActorGender\" value=\"male\" checked={selectedActorUpdate.gender==='male' && 'checked'} onChange={updateActorInput}/>Male\n                </label>\n              </div>\n              <div class=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"updateActorGender\" value=\"female\" checked={selectedActorUpdate.gender==='female' && 'checked'} onChange={updateActorInput}/>Female\n                </label>\n              </div>                   \n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"button\" style={{marginLeft:\"auto\", marginRight:\"auto\"}} className=\"btn btn-primary\" onClick={_=>{updateActor(selectedActorUpdate.id)}}>Update</button>\n        </div>\n      </div>   \n</div>\n</div>\n  }\n\n  const updateActor = function(actorId){\n        document.getElementById(\"updateActorModalDismiss\").click();\n        const reqData = selectedActorUpdate;\n        ajaxRequest(ACTORS_API+'/'+actorId, 'PATCH', reqData, (resData)=>{\n            if(resData.success){\n                setIsActorUpdated(true);\n            }\n        });\n    }\n\n    const createMovieUpdateModal = function(){\n      let releaseDate = selectedMovieUpdate.release_date ? dateFormatter(selectedMovieUpdate.release_date): \"\";\n      return <div className=\"modal fade\" id=\"updateMovieModal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Update Movie</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" id=\"updateMovieModalDismiss\">\n              <span>&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"input-group\">\n              <label className=\"input-group\" for=\"updateMovieTitleText\">Title:</label>\n              <input type=\"text\" className=\"form-control\" id=\"updateMovieTitleText\" value={selectedMovieUpdate.title} onChange={updateMovieInput}/>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"input-group\" for=\"updateMovieReleaseDateVal\">Release Date:</label>\n              <input type=\"date\" className=\"form-control\" id=\"updateMovieReleaseDateVal\" value={releaseDate} onChange={updateMovieInput}/>                      \n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" style={{marginLeft:\"auto\", marginRight:\"auto\"}} className=\"btn btn-primary\" onClick={_=>{updateMovie(selectedMovieUpdate.id)}}>Update</button>\n          </div>\n        </div>   \n  </div>\n  </div>\n    }\n\n    const updateMovie = function(movieId){\n      // Let's close the modal while updating values\n      document.getElementById(\"updateMovieModalDismiss\").click();\n      ajaxRequest(MOVIES_API+'/'+movieId, 'PATCH', selectedMovieUpdate, (resData)=>{\n        if(resData.success){\n          setIsMovieUpdated(true);\n        }\n      });\n    }\n\n  return (\n    <div className='row'>\n      <div className='col'>\n          <div className=\"nav nav-tabs\" id=\"dashboardTab\" role=\"tablist\">\n              <a className=\"nav-item nav-link active\" data-toggle=\"tab\" href=\"#viewContent\" role=\"tab\">View/Edit</a>\n              <a className=\"nav-item nav-link\" data-toggle=\"tab\" href=\"#manageCastContent\" role=\"tab\">Manage Cast</a>\n          </div>\n          <div className=\"tab-content\" id=\"tabDashboardContent\">\n            <div className=\"tab-pane fade show active\" id=\"viewContent\" role=\"tabpanel\" >\n              <div className=\"row\">\n                <div className='col'>\n                  <h3>Movies</h3>\n                  <div className='btn-primary btn-lg' id='createMovieBtn' data-toggle=\"modal\" data-target=\"#addMovieModal\">Create Movie</div>\n                    {createMovieModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <MoviesCard loadMovies={isMovieUpdated} isMovieDeleted={(_=>{setMovieActorUpdated(true)})} loadMoviesList={(resData)=>{\n                      setMoviesList(resData);\n                      setIsMovieUpdated(false);\n                      }} chooseUpdate={setSelectedMovieUpdate}/>\n                  </div>\n                  {createMovieUpdateModal()}\n                </div>\n                <div className='col'>\n                  <h3>Actors</h3>\n                  <div className='btn-primary btn-lg' id='createActorBtn' data-toggle=\"modal\" data-target=\"#addActorModal\">Create Actor</div>\n                    {createActorModal()}\n                  <div className='container' style={{marginLeft:15, marginTop:10}}>\n                    <ActorsCard loadActors={isActorUpdated} isActorDeleted={(_=>{setMovieActorUpdated(true)})} loadActorsList={(resData)=>{\n                      setActorsList(resData);\n                      setIsActorUpdated(false);\n                      }} chooseUpdate={setSelectedActorUpdate} />\n                  </div>\n                  {createActorUpdateModal()}\n                </div>\n              </div>\n            </div>\n            <div className=\"tab-pane fade\" id=\"manageCastContent\" role=\"tabpanel\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"row\" style={{marginTop:20}}>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedMovie\">\n                        <option disabled selected>Select Movie</option>\n                        {moviesList.map((movie)=>{\n                          return <option value={movie.id}>{movie.title}</option>\n                        })}\n                      </select>\n                    </div>\n                    <div className=\"col\">\n                      <select className=\"custom-select\" id=\"selectedActor\">\n                        <option disabled selected>Select Actor</option>\n                        {actorsList.map((actor)=>{\n                          return <option value={actor.id}>{actor.name}</option>\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"row\" style={{marginTop:10}}>\n                    <div className=\"col\">\n                      <div className=\"btn btn-success btn-lg btn-block\" onClick={addActorToMovie}>\n                        Cast to the movie\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <MoviesCastCard isUpdated={isMovieActorUpdated} disableIsUpdated={()=> setMovieActorUpdated(false)}/>\n                    </div>\n                    \n                  </div>    \n                </div>\n                \n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n\n  );\n}\nexport default Dashboard;","/**\n * Convert standard date string to YYYY-MM-dd or YYYY/MM/dd \n * @param {date string} dateString \n */\nconst dateFormatter = function(dateString, sep='-'){\n    // Let's remove the timezone concept since we don't require timezone in this particular requirement\n    dateString = dateString.replace(\"GMT\", \"\");\n    let date = new Date(dateString+ \" \");\n    const monthFormat = (date.getMonth()+1)<10 ? '0'+(date.getMonth()+1) : (date.getMonth()+1); \n    return `${date.getFullYear()}${sep}${monthFormat}${sep}${date.getDate()}`;\n}\nexport {dateFormatter};","import Dashboard from './components/Dashboard';\nimport React, { useEffect, useState } from 'react';\n\n// Main App Components\nfunction App() {\n  ;\n\n  return (\n    <div className=\"App container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Casting Agency</h1>\n        <p>Single place to view movies, actors and assign actors to the movies!!!!!</p>\n      </div>\n      <Dashboard/>\n    </div>\n  );\n}\nconst appStyles={\n  appTheme:{\n    color:'white'\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}